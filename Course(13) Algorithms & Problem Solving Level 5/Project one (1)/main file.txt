
#include <iostream>
using namespace std;

#include "clsMyDblLinkedList.h"




int main()
{

	clsDblLinkedList <int> MydblLinkedList;

	

	/*if (MydblLinkedList.IsEmpty())
	{
		cout << " \n yes , is empty";
	}
	else
	{
		cout << " No , Is Not Empty";
	}*/


	MydblLinkedList.InsertAtBeginning(1);
	MydblLinkedList.InsertAtBeginning(2);
	MydblLinkedList.InsertAtBeginning(3);
	MydblLinkedList.InsertAtBeginning(4);
	MydblLinkedList.InsertAtBeginning(5);

	cout << "\nLinked List Contenet:\n";
	MydblLinkedList.PrintList();
	MydblLinkedList.Reverse();
	cout << "\nLinked List Contenet After Revese:\n";
	MydblLinkedList.PrintList();

	clsDblLinkedList <int> :: Node* N;

	N = MydblLinkedList.GetNode(2);
	cout << " Number of Node Based In GetNode " << N->value ;

	cout << " Get Item :"<< MydblLinkedList.GetItem(3);

	cout << " insert Node after index :"<< MydblLinkedList.InsertAfter(1, 500);
	MydblLinkedList.PrintList();


  /*
	clsDblLinkedList<int>::Node* N1 = MydblLinkedList.Find(2);


	if (N1 != NULL)
		cout << "\nNode with value 2 is Found :-)\n";
	else
		cout << "\nNode Is not found :-(\n";

	MydblLinkedList.InsertAfter(N1, 500);
	cout << "\nAfter Inserting 500 after 2:\n";
	MydblLinkedList.PrintList();

	MydblLinkedList.InsertAtEnd(700);
	cout << "\nAfter Inserting 700 at end:\n";
	MydblLinkedList.PrintList();

	clsDblLinkedList<int>::Node* N2 = MydblLinkedList.Find(4);
	MydblLinkedList.DeleteNode(N2);
	cout << "\nAfter Deleting 4:\n";
	MydblLinkedList.PrintList();

	MydblLinkedList.DeleteFristNode();
	cout << "\nAfter Deleting First Node:\n";
	MydblLinkedList.PrintList();

	cout << "\nAfter Deleting Last Node:\n";
	MydblLinkedList.DeleteLastNode();
	MydblLinkedList.PrintList();*/

	
	//cout << " Number Of Nodes In List = "<< MydblLinkedList.Size();
	//cout << endl;
	//cout << " Number Of Nodes In List  after clear = "; MydblLinkedList.Clear();


	/*if (MydblLinkedList.IsEmpty())
	{
		cout << " \n yes , is empty";
	}
	else
	{
		cout << " No , Is Not Empty";
	}*/


	system("pause>0");


};